# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gat < Formula
  desc ""
  homepage ""
  version "0.25.3"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/koki-develop/gat/releases/download/v0.25.3/gat_Darwin_x86_64.tar.gz"
      sha256 "97ef22105b483fbc2c128c752356ec2206d450b4f82092b88c9269b95a609661"

      def install
        bin.install "gat"
        bash_completion.install "completions/gat.bash" => "gat"
        zsh_completion.install "completions/gat.zsh" => "_gat"
        fish_completion.install "completions/gat.fish"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/koki-develop/gat/releases/download/v0.25.3/gat_Darwin_arm64.tar.gz"
      sha256 "1a7d6268964da507b4dfa590b3c2c64b52465e05cdd5e9ded58864314a932074"

      def install
        bin.install "gat"
        bash_completion.install "completions/gat.bash" => "gat"
        zsh_completion.install "completions/gat.zsh" => "_gat"
        fish_completion.install "completions/gat.fish"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/koki-develop/gat/releases/download/v0.25.3/gat_Linux_x86_64.tar.gz"
      sha256 "f33cd7f20105a6bf8fec7dd0a812eae8d47cb6033d000ae727c3d1873576bbb4"
      def install
        bin.install "gat"
        bash_completion.install "completions/gat.bash" => "gat"
        zsh_completion.install "completions/gat.zsh" => "_gat"
        fish_completion.install "completions/gat.fish"
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/koki-develop/gat/releases/download/v0.25.3/gat_Linux_arm64.tar.gz"
      sha256 "41b899ff737d5c861f545347d0cfa4d1a0f51ae594bf73de2322165b1c52aecd"
      def install
        bin.install "gat"
        bash_completion.install "completions/gat.bash" => "gat"
        zsh_completion.install "completions/gat.zsh" => "_gat"
        fish_completion.install "completions/gat.fish"
      end
    end
  end
end
